{"version":3,"sources":["PieChart.js","BarChart.js","Pyramid.js","Semi-circle.js","App.js","serviceWorker.js","index.js"],"names":["am4core","am4themes_animated","PieChart","Id","this","props","id","toString","chart","am4charts","data","pieSeries","series","push","dataFields","value","category","slices","template","stroke","strokeWidth","strokeOpacity","hiddenState","properties","opacity","endAngle","startAngle","dispose","className","style","width","textAlign","padding","height","Component","BarChart","categoryAxis","xAxes","renderer","grid","location","minGridDistance","labels","adapter","add","dy","target","dataItem","index","yAxes","valueY","categoryX","name","columns","tooltipText","fillOpacity","columnTemplate","Pyramid","paddingBottom","alignLabels","valueIs","Semicircle","radius","innerRadius","cornerRadius","innerCornerRadius","draggable","inert","legend","App","state","items","key","charts","count","addItem","bind","e","setState","inputElement","inputValue","newItem","Date","now","prevState","concat","newData","preventDefault","filteredItems","filter","item","newCount","entry","type","data-toggle","aria-haspopup","aria-expanded","marginTop","aria-labelledby","onClick","select","map","deleteItem","data-target","tabIndex","role","aria-hidden","data-dismiss","aria-label","onSubmit","ref","a","marginRight","showChart","temp","i","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6377a21d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport { cos } from '@amcharts/amcharts4/.internal/core/utils/Math';\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport class PieChart extends Component {\r\n    componentDidMount() {\r\n        const newId = this.props.id;\r\n        let Id = \"pie-chart\" + (newId.toString());\r\n        \r\n        let chart = am4core.create(`${Id}`, am4charts.PieChart);\r\n        let data = this.props.data;\r\n        chart.data = data;\r\n\r\n        let pieSeries = chart.series.push(new am4charts.PieSeries());\r\n        pieSeries.dataFields.value = \"value\";\r\n        pieSeries.dataFields.category = \"name\";\r\n        pieSeries.slices.template.stroke = am4core.color(\"#fff\");\r\n        pieSeries.slices.template.strokeWidth = 2;\r\n        pieSeries.slices.template.strokeOpacity = 1;\r\n\r\n        pieSeries.hiddenState.properties.opacity = 1;\r\n        pieSeries.hiddenState.properties.endAngle = -90;\r\n        pieSeries.hiddenState.properties.startAngle = -90;\r\n        this.chart = chart;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const newId = this.props.id;\r\n        let Id = \"pie-chart\" + (newId.toString());\r\n        \r\n        return (\r\n            <div className=\"piechart\">\r\n                <div className=\"title\" style={{width: \"100%\", textAlign: \"center\"}}>\r\n                    <h3 style={{padding: 10}}>Pie Chart</h3>\r\n                </div>\r\n                <div id={`${Id}`} style={{ width: \"100%\", height: 400}} ></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PieChart\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport class BarChart extends Component {\r\n    \r\n    componentDidMount() {\r\n\r\n        const newId = this.props.id;\r\n        let Id = \"bar-chart\" + (newId.toString());\r\n\r\n        let chart = am4core.create(`${Id}`, am4charts.XYChart);\r\n        let data = this.props.data;\r\n        chart.data = data;\r\n\r\n        let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n        categoryAxis.dataFields.category = \"name\";\r\n        categoryAxis.renderer.grid.template.location = 0;\r\n        categoryAxis.renderer.minGridDistance = 30;\r\n\r\n        categoryAxis.renderer.labels.template.adapter.add(\"dy\", function(dy, target) {\r\n        if (target.dataItem && target.dataItem.index & 2 == 2) {\r\n            return dy + 25;\r\n        }\r\n        return dy;\r\n        });\r\n\r\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n        // Create series\r\n        let series = chart.series.push(new am4charts.ColumnSeries());\r\n        series.dataFields.valueY = \"value\";\r\n        series.dataFields.categoryX = \"name\";\r\n        series.name = \"Value\";\r\n        series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\r\n        series.columns.template.fillOpacity = .8;\r\n\r\n        let columnTemplate = series.columns.template;\r\n        columnTemplate.strokeWidth = 2;\r\n        columnTemplate.strokeOpacity = 1;\r\n        this.chart = chart;\r\n\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const newId = this.props.id;\r\n        let Id = \"bar-chart\" + (newId.toString());\r\n\r\n        return (\r\n            <div className=\"barchart\">\r\n                <div className=\"title\" style={{width: \"100%\", textAlign: \"center\"}}>\r\n                    <h3 style={{padding: 10}}>Bar Chart</h3>\r\n                </div>\r\n                <div id={`${Id}`} style={{ width: \"100%\", height: 400}} ></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BarChart\r\n","import React, { Component } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport class Pyramid extends Component {\r\n    componentDidMount(){\r\n        const newId = this.props.id;\r\n        let Id = \"pyramid\" + (newId.toString());\r\n        \r\n        let chart = am4core.create(`${Id}`, am4charts.SlicedChart);\r\n        let data = this.props.data;\r\n        chart.data = data;\r\n        chart.paddingBottom = 30;\r\n        let series = chart.series.push(new am4charts.PyramidSeries());\r\n        series.dataFields.value = \"value\";\r\n        series.dataFields.category = \"name\";\r\n        series.alignLabels = true;\r\n        series.valueIs = \"height\";\r\n        this.chart = chart;\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const newId = this.props.id;\r\n        let Id = \"pyramid\" + (newId.toString());\r\n\r\n        return (\r\n            <div className=\"pyramid\">\r\n                <div className=\"title\" style={{width: \"100%\", textAlign: \"center\"}}>\r\n                    <h3 style={{padding: 10}}>Pyramid</h3>\r\n                </div>\r\n                <div id={`${Id}`} style={{ width: \"100%\", height: 400}} ></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pyramid\r\n","import React, { Component } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport class Semicircle extends Component {\r\n    componentDidMount(){\r\n        const newId = this.props.id;\r\n        let Id = \"semi-circle\" + (newId.toString());\r\n\r\n        let chart = am4core.create(`${Id}`, am4charts.PieChart);\r\n        let data = this.props.data;\r\n        chart.data = data;\r\n        chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\r\n        chart.radius = am4core.percent(70);\r\n        chart.innerRadius = am4core.percent(40);\r\n        chart.startAngle = 180;\r\n        chart.endAngle = 360;  \r\n\r\n        let series = chart.series.push(new am4charts.PieSeries());\r\n        series.dataFields.value = \"value\";\r\n        series.dataFields.category = \"name\";\r\n\r\n        series.slices.template.cornerRadius = 10;\r\n        series.slices.template.innerCornerRadius = 7;\r\n        series.slices.template.draggable = true;\r\n        series.slices.template.inert = true;\r\n        series.alignLabels = false;\r\n\r\n        series.hiddenState.properties.startAngle = 90;\r\n        series.hiddenState.properties.endAngle = 90;\r\n\r\n        chart.legend = new am4charts.Legend();\r\n        this.chart = chart;\r\n\r\n\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const newId = this.props.id;\r\n        let Id = \"semi-circle\" + (newId.toString());\r\n\r\n        return (\r\n            <div className=\"semi-circle\">\r\n                <div className=\"title\" style={{width: \"100%\", textAlign: \"center\"}}>\r\n                    <h3 style={{padding: 10}}>Semi Circle</h3>\r\n                </div>\r\n                <div id={`${Id}`} style={{ width: \"100%\", height: 400}} ></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Semicircle\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport PieChart from './PieChart';\nimport BarChart from './BarChart';\nimport Pyramid from './Pyramid';\nimport Semicircle from './Semi-circle';\n\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      items: [\n        {name: \"Food\", value: \"200\", key: \"1\"},\n        {name: \"Cloth\", value: \"300\", key: \"2\"},\n        {name: \"Supply\", value: \"100\", key: \"3\"},\n        {name: \"Water\", value: \"250\", key: \"4\"},\n        {name: \"Fuel\", value: \"150\", key: \"5\"},\n      ],\n      template: [],\n      charts: \"\",\n      count: 0,\n    \n    }\n    this.addItem = this.addItem.bind(this);\n\n  }\n\n  // click the dropdown list to change the value and create different tamplate based on differet values\n  select(e){\n    this.setState({\n      charts: e.target.value\n    })\n  }\n\n  // Add new data to the table\n  addItem(e){\n    if(this.inputElement.value && this.inputValue.value !== \"\"){\n      var newItem = {\n          name: this.inputElement.value,\n          value: this.inputValue.value,\n          key: Date.now(),\n      };\n\n      this.setState((prevState) => {\n          return {\n              items: prevState.items.concat(newItem),\n              newData: this.state.items.concat(newItem)\n          };\n      });\n\n      this.inputElement.value = \"\";\n      this.inputValue.value = \"\";\n  }\n  e.preventDefault();\n  }\n\n  // Delete data\n  deleteItem(key){\n    var filteredItems = this.state.items.filter(item => {\n        return (item.key !== key);\n    });\n\n    this.setState({\n        items: filteredItems\n    });\n  }\n\n  // Show Chart on the right side\n  showChart(e){\n    let chart = this.state.charts;\n    let data = this.state.items;\n    let newCount = this.state.count;\n    this.setState({\n      count: newCount + 1,\n    })\n\n    \n\n    // when the value eqauls \"pie\", generate piechart\n    if(chart === \"pie\"){\n      this.setState({\n        template: [\n          ...this.state.template,\n          <PieChart data={data} id={newCount}/>,\n        ]\n      })\n    }\n\n    // when the value eqauls \"semi-circle\", generate Semi-circle chart\n    if(chart === \"semi-circle\"){\n      this.setState({\n        template: [\n          ...this.state.template,\n          <Semicircle data={data} id={newCount}/>\n        ]\n      })\n      \n    }\n\n    // when the value eqauls \"bar\", generate barchart\n    if(chart === \"bar\"){\n      this.setState({\n        template: [\n          ...this.state.template,\n          <BarChart data={data} id={newCount}/>\n        ]\n      })\n    }\n\n    // when the value eqauls \"pyr\", generate pyramid\n    if(chart === \"pyr\"){\n      this.setState({\n        template: [\n          ...this.state.template,\n          <Pyramid data={data} id={newCount}/>\n        ]\n      })\n    }\n  }\n\n  render() {\n\n    let entry = this.state.items;\n    \n\n    return (\n      <div className=\"main\">\n        <div className=\"leftContent\">\n          {/* Dropdown Button */}\n          <div className=\"dropdown\">\n            <button className=\"btn btn-primary dropdown-toggle\" \n                    type=\"button\" \n                    id=\"dropdownMenuButton\"\n                    data-toggle=\"dropdown\" \n                    aria-haspopup=\"true\" \n                    aria-expanded=\"false\"\n                    style={{marginTop: 60, padding: 10}}\n            >\n            Template Select Dropdown\n            </button>\n\n            {/* Click dropdown list to change the templates */}\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" style={{width: \"100%\"}} >\n              <button className=\"dropdown-item\" type=\"button\" value=\"pie\" onClick={(e) => this.select(e)}>Pie Chart</button>\n              <button className=\"dropdown-item\" type=\"button\" value=\"semi-circle\" onClick={(e) => this.select(e)}>Semi Circle</button>\n              <button className=\"dropdown-item\" type=\"button\" value=\"bar\" onClick={(e) => this.select(e)}>Bar Chart</button>\n              <button className=\"dropdown-item\" type=\"button\" value=\"pyr\" onClick={(e) => this.select(e)}>Pyramid</button>\n            </div>\n          </div>\n\n          {/* Datatable */}\n          {/* datatable to show data */}\n          <div className=\"datatable\">\n            <table className=\"data-table\">\n            <tbody>\n            <tr>\n                <th>Name</th>\n                <th>Value</th>\n                <th style={{width: 80}}>Option</th>\n            </tr>\n            {entry.map(item => {\n                return (\n                    <tr key={item.key}>\n                        <td>{item.name}</td>\n                        <td>{item.value}</td>\n                        <td>\n                          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.deleteItem(item.key)}>Delete</button>\n                        </td>\n                    </tr>\n                )\n            })}\n            </tbody>\n            </table>\n          </div>\n\n          {/* Buttons */}\n          <div className=\"twoButtons\">\n            {/* Add Data Button */}\n            <button type=\"button\" className=\"addData btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalForm\">Add Data</button>\n\n              {/* Modal */}\n              {/* when click \"add data\" button, a modal will show up and allow user to insert new data */}\n              <div className=\"modal fade\" tabIndex=\"-1\" id=\"modalForm\" role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                  <div className=\"modal-content\">\n                    \n                    <div className=\"modal-header\">\n                      <h5 className=\"modal-title\" id=\"modalFormLabel\">Add Data</h5>\n                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </div>\n                    <div className=\"modal-body\">\n                      <form onSubmit={this.addItem}>\n                        <div className=\"form-group\">\n                          <label className=\"col-form-label\">Name:</label>\n                          {/* allow user to insert new name */}\n                          <input type=\"text\" className=\"form-control\" ref={(a) => this.inputElement = a}/>\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"col-form-label\">Value:</label>\n                          {/* allow user to insert new value */}\n                          <input type=\"number\" className=\"form-control\" ref={(a) => this.inputValue = a}/>\n                        </div>\n                        <div>\n                          <button type=\"submit\" className=\"btn btn-primary\" style={{marginRight: 10}}>Add</button>\n                          <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                        </div>\n                      </form>\n                    </div>\n                    \n                  </div>\n                </div>\n              </div>\n            \n            {/* Submit Button */}\n            <button className=\"submitData btn btn-primary\" type=\"button\" onClick={() => this.showChart()} \n            >Submit</button>\n          </div>\n        </div>\n        \n        <div className=\"rightContent\">\n          <div className=\"chart-container\">\n            {this.state.template.map((temp, i) => {\n              return (\n                <div className=\"chart\" key={i}>\n                  {temp}\n                </div>\n                )\n            })}\n          </div>  \n      </div>\n      </div>\n\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}